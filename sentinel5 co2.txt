//VERSION=3
function setup() {
  return {
    input: ["B12","B11","B10","B09","B05","B04","B03","dataMask"],
    output: { bands: 7 }
  };
}

function evaluatePixel(sample) {
  
  // return [sample.B12 * (0.1 / sample.B04), sample.B11 - 0.5, 3 * sample.B04, sample.dataMask];
  return [5 * ((sample.B12 + sample.B11 + sample.B10) / 3) - (0.1 / ((sample.B04 + sample.B05) / 1.5)), 0, (sample.B05 - sample.B04) / (sample.B05 + sample.B04) * 0.75, sample.dataMask];
}


bej legjendat


//VERSION=3
function setup() {
  return {
    input: ["B12","B11","B10","B09","B05","B04","B03","dataMask"],
    output: { bands: 7 }
  };
}

function evaluatePixel(sample) {
  // B12, B11, B10 > 0.3, B05 B04 B03 < 0.3 
  let co2high = 0;
  let co2mid2 = 0;
  let co2mid = 0;

  if ((sample.B12 + sample.B11 + sample.B10) / 3 > 0.24 && (sample.B05 + sample.B04 + sample.B03) / 3 < 0.33 && sample.B09 < 0.1) {
    co2high = 1;
  }
  if ((sample.B12 + sample.B11 + sample.B10) / 3 > 0.2 && (sample.B05 + sample.B04 + sample.B03) / 3 < 0.4 && sample.B09 < 0.1) {
    co2mid = 1;
  }
  if ((sample.B12 + sample.B11 + sample.B10) / 3 > 0.15 && (sample.B05 + sample.B04 + sample.B03) / 3 < 0.45 && sample.B09 < 0.1) {
    co2mid2 = 1;
  }
  // return [sample.B12 * (0.1 / sample.B04), sample.B11 - 0.5, 3 * sample.B04, sample.dataMask];
  // return [5 * ((sample.B12 + sample.B11 + sample.B10) / 3) - (0.1 / ((sample.B04 + sample.B05) / 1.5)), sample.B10, (sample.B05 - sample.B04) / (sample.B05 + sample.B04) * 0.75, sample.dataMask];
  return [co2high + (0.7 * co2mid) + (0.3 * co2mid2), 0, (sample.B05 - sample.B04) / (sample.B05 + sample.B04) * 0.75, sample.dataMask];
}




----

//VERSION=3
function setup() {
  return {
    input: ["B12","B11","B10","B09","B05","B04","B03","dataMask"],
    output: { bands: 7 }
  };
}

function evaluatePixel(sample) {
  // B12, B11, B10 > 0.3, B05 B04 B03 < 0.3 
  let co2high = 0;
  let co2mid2 = 0;
  let co2mid = 0;

  if ((sample.B12 + sample.B11 + sample.B10) / 3 > 0.26 && (sample.B05 + sample.B04 + sample.B03) / 3 < 0.4 && sample.B09 < 0.1) {
    co2high = 1;
  }
  if ((sample.B12 + sample.B11 + sample.B10) / 3 > 0.2 && (sample.B05 + sample.B04 + sample.B03) / 3 < 0.4 && sample.B09 < 0.1) {
    co2mid = 1;
  }
  if ((sample.B12 + sample.B11 + sample.B10) / 3 > 0.17 && (sample.B05 + sample.B04 + sample.B03) / 3 < 0.45 && sample.B09 < 0.1) {
    co2mid2 = 1;
  }
  // return [sample.B12 * (0.1 / sample.B04), sample.B11 - 0.5, 3 * sample.B04, sample.dataMask];
  // return [5 * ((sample.B12 + sample.B11 + sample.B10) / 3) - (0.1 / ((sample.B04 + sample.B05) / 1.5)), sample.B10, (sample.B05 - sample.B04) / (sample.B05 + sample.B04) * 0.75, sample.dataMask];
  return [co2high + (0.7 * co2mid), 0.7 * co2mid + (0.7 * co2mid2), (sample.B05 - sample.B04) / (sample.B05 + sample.B04) * 0.75, sample.dataMask];
}


